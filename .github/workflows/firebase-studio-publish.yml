name: Build & Deploy to Firebase Hosting

on:
  push:
    branches: [main]
    paths:
      - 'apps/**'
      - 'firebase.json'
      - '.github/workflows/firebase-studio-publish.yml'
  workflow_dispatch: {}
  repository_dispatch:
    types: [firebase-studio-publish, firebase-studio-update]

# Ei tarvita repo-kirjoitusoikeuksia, koska emme commitoi t√§ss√§ workflow'ssa
permissions:
  contents: read

env:
  FIREBASE_PROJECT_ID: ai-artifacts-journey
  FIREBASE_HOSTING_SITE: ai-artifacts-journey
  # apps/<APP>/dist/index.html odotetaan rewriten mukaan:
  APP_DIRS: "webappstory HSTPT cosmicweather photoadventure"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node (for build & Firebase CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Yrit√§ buildata jokainen appi, jos niill√§ on package.json.
      # Jos build tuottaa "build" tai "out", kopioi se dist:iin (firebase.json odottaa dist/).
      - name: Build apps (npm/yarn/pnpm)
        run: |
          set -e
          for app in $APP_DIRS; do
            dir="apps/$app"
            if [ -f "$dir/package.json" ]; then
              echo "üîß Building $dir ..."
              if command -v npm >/dev/null 2>&1; then
                (cd "$dir" && npm ci && npm run build)
              elif command -v yarn >/dev/null 2>&1; then
                (cd "$dir" && yarn install --frozen-lockfile && yarn build)
              else
                npm i -g pnpm
                (cd "$dir" && pnpm install --frozen-lockfile && pnpm build)
              fi
              # Jos ulostulo on build/ tai out/, siirr√§ se dist/:iin
              if [ -d "$dir/build" ]; then
                rm -rf "$dir/dist"; mkdir -p "$dir/dist"; cp -R "$dir/build/"* "$dir/dist/"
              fi
              if [ -d "$dir/out" ]; then
                rm -rf "$dir/dist"; mkdir -p "$dir/dist"; cp -R "$dir/out/"* "$dir/dist/"
              fi
            else
              echo "‚ÑπÔ∏è Skipping $dir (no package.json)"
            fi
          done

      # Varmista, ett√§ on aina jotain julkaistavaa (luo placeholder, jos dist puuttuu)
      - name: Ensure dist placeholders (only if missing)
        run: |
          set -e
          mkdir -p apps
          for app in $APP_DIRS; do
            mkdir -p "apps/$app/dist"
            f="apps/$app/dist/index.html"
            if [ ! -f "$f" ]; then
              echo "<!doctype html><html><head><meta charset='utf-8'><title>$app</title></head><body><h1>$app placeholder</h1><p>Generated at $(date -u +%Y-%m-%dT%H:%M:%SZ)</p></body></html>" > "$f"
              echo "Created $f"
            else
              echo "Exists: $f"
            fi
          done

      - name: List dist index files
        run: |
          echo "Looking for apps/*/dist/index.html ..."
          find apps -type f -path "*/dist/index.html" -print | sed 's/^/ ‚Ä¢ /' || true

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Deploy to Firebase Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          firebase deploy --only "hosting:${FIREBASE_HOSTING_SITE}" --project "$FIREBASE_PROJECT_ID" --non-interactive
